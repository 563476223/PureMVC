//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssetsFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AssetsFactory), typeof(System.Object));
		L.RegFunction("InitAssetFactory", InitAssetFactory);
		L.RegFunction("LoadAsset", LoadAsset);
		L.RegFunction("LoadAssetAsync", LoadAssetAsync);
		L.RegFunction("UnLoadAsset", UnLoadAsset);
		L.RegFunction("CancleLoad", CancleLoad);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitAssetFactory(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetsFactory obj = (AssetsFactory)ToLua.CheckObject<AssetsFactory>(L, 1);
			obj.InitAssetFactory();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AssetsFactory obj = (AssetsFactory)ToLua.CheckObject<AssetsFactory>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Object o = obj.LoadAsset(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AssetsFactory obj = (AssetsFactory)ToLua.CheckObject<AssetsFactory>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			Callback_1<UnityEngine.Object> arg1 = (Callback_1<UnityEngine.Object>)ToLua.CheckDelegate<Callback_1<UnityEngine.Object>>(L, 3);
			obj.LoadAssetAsync(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadAsset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AssetsFactory obj = (AssetsFactory)ToLua.CheckObject<AssetsFactory>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.UnLoadAsset(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CancleLoad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AssetsFactory obj = (AssetsFactory)ToLua.CheckObject<AssetsFactory>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			Callback_1<UnityEngine.Object> arg1 = (Callback_1<UnityEngine.Object>)ToLua.CheckDelegate<Callback_1<UnityEngine.Object>>(L, 3);
			obj.CancleLoad(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, AssetsFactory.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

